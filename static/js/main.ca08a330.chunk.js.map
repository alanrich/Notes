{"version":3,"sources":["Note.js","AddNote.js","NotesList.js","Search.js","Header.js","App.js","index.js"],"names":["Note","id","date","text","handleDelete","handleEdit","handlePriority","className","color","size","onClick","AddNote","handleSubmitProp","useState","noteText","setNoteText","cols","rows","placeholder","onChange","e","length","target","value","trim","NotesList","editingText","editingTextHandler","notes","saveEdit","noteEditing","map","note","Search","searchText","setSearchText","type","Header","darkModeHandler","darkMode","App","setDarkMode","search","setSearch","setNoteEditing","setEditingText","Date","now","toLocaleDateString","setNotes","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","newNote","console","log","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca08a330.chunk.js","sourcesContent":["import { MdDeleteForever } from 'react-icons/md'\nimport { Icon } from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit'\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh'\n\nconst Note = ({ id, date, text, handleDelete, handleEdit, handlePriority}) => {\n  return(\n      <div className='note'>\n        <span>{text}</span>\n        <div className='note-footer'>\n          <small>{date}</small>\n            <div className='note-icons'>\n              <PriorityHighIcon\n                className='priority-icon'\n                color='tertiary'\n                size='1.3em'/>\n              <EditIcon\n                className='edit-icon'\n                color='tertiary'\n                size='1.3em'\n                onClick={()=> handleEdit(id)}/>\n              <MdDeleteForever\n                className='delete-icon'\n                size='1.3em'\n                onClick={()=>handleDelete(id)}/>\n          </div>\n        </div>\n      </div>\n\n  )\n};\n\nexport default Note;\n","import { useState } from 'react'\n\nconst AddNote = ({ handleSubmitProp }) => {\n  const [noteText,setNoteText] = useState('');\n  var charLimit = 200;\n\n  const handleChange = (e) => {\n    if(noteText.length < charLimit){\n      setNoteText(e.target.value)\n    };\n  }\n\n  const handleSubmit = () => {\n    if(noteText.trim().length > 0){\n      handleSubmitProp(noteText)\n    };\n    setNoteText('');\n  }\n\n  return(\n    <div className='note new'>\n      <textarea\n        cols=\"10\"\n        rows=\"8\"\n        placeholder=\"type to add a note\"\n        onChange={handleChange}\n        value={noteText}\n      ></textarea>\n      <div className=\"note-footer\">\n        <small>{charLimit - noteText.length} characters remaining</small>\n        <button className='save'onClick={handleSubmit}>Save</button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddNote;\n","import { useState } from 'react'\nimport Note from './Note'\nimport AddNote from './AddNote'\n\nconst NotesList = ({  editingText, editingTextHandler, notes, handleSubmitProp, handleDelete, handleEdit, saveEdit, noteEditing }) => {\n  const [noteText,setNoteText] = useState('');\n  var charLimit = 200;\n\n  return(\n    <div className='notes-list'>\n\n      {notes.map((note) =>  note.id === noteEditing ?\n        <div className='note yellow'>\n          <textarea\n            cols=\"10\"\n            rows=\"8\"\n            placeholder=\"type to edit note\"\n            value={editingText}\n            onChange={((e)=> {\n              editingTextHandler(e.target.value);\n              setNoteText(e.target.value);\n            })}\n            >\n          </textarea>\n          <div className=\"note-footer\">\n            <small>{charLimit - noteText.length} characters remaining</small>\n            <button\n              className='save'\n              onClick={(() => saveEdit(note.id))}>\n              Save\n            </button>\n          </div>\n        </div>\n        :\n\n      <Note\n          id={note.id}\n          text={note.text}\n          date={note.date}\n          handleDelete={handleDelete}\n          handleEdit={handleEdit} />\n      )}\n\n      <AddNote handleSubmitProp={handleSubmitProp} />\n    </div>\n  );\n};\n\nexport default NotesList;\n","import React from 'react'\nimport { MdSearch } from 'react-icons/md'\n\nconst Search = ({ searchText, setSearchText }) => {\n\treturn (\n\t\t<div className='search'>\n\t\t\t<MdSearch className='search-icons' size='1.3em' />\n\t\t\t<input\n\t\t\t\tplaceholder='type to search...'\n\t\t\t\ttype='text'\n\t\t\t\tvalue={searchText}\n\t\t\t\tonChange={(e)=> setSearchText(e.target.value)} />\n    </div>\n  );\n}\n\nexport default Search\n","import React from 'react'\n\nconst Header = ({ darkModeHandler, darkMode }) => {\n  return(\n    <div className='header'>\n      <h1>Notes</h1>\n      <button\n        className='save'\n        onClick={()=> darkModeHandler((color) => !color)}>\n        {darkMode === true ? 'Light Mode' : 'Dark Mode'}\n       </button>\n    </div>\n  );\n}\n\nexport default Header;\n","import NotesList from './NotesList'\nimport Search from './Search'\nimport Header from './Header'\nimport { useState, useEffect } from 'react'\n\nconst App = () => {\n\n  const [darkMode, setDarkMode] = useState(false);\n  const [search, setSearch] = useState('');\n  const [noteEditing, setNoteEditing] =useState(null);\n  const [editingText, setEditingText] = useState('');\n  const [notes, setNotes] = useState([\n    {\n      id:Date.now(),\n      date:new Date().toLocaleDateString(),\n      text:'This is a sample note, use the green card to make editable, deleteable, searchable notes that will persist in your browser',\n    }\n  ]);\n\n  useEffect(() => {\n\t\tconst savedNotes = JSON.parse(\n\t\t\tlocalStorage.getItem('react-notes-app-data')\n\t\t);\n\t\tif (savedNotes) {\n\t\t\tsetNotes(savedNotes);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\n\t\t\t'react-notes-app-data',\n\t\t\tJSON.stringify(notes)\n\t\t);\n\t}, [notes]);\n\n  const addNote = (text) => {\n      const date = new Date();\n      const newNote = {\n        id: Date.now(),\n        date: date.toLocaleDateString(),\n        text:text,\n      };\n      console.log('newNote =' + newNote)\n      const newNotes = [...notes, newNote];\n      console.log(\"newnotes = \" + newNotes)\n      setNotes(newNotes);\n  }\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => (note.id !== id));\n    setNotes(newNotes);\n  }\n\n  const editNote = ((id) => {\n    setNoteEditing(id);\n  });\n\n  const editingTextHandler = (text) => {\n    setEditingText(text);\n  }\n\n  // assign the edited value to the task with matching id.\n  // except the one the method modifies\n  const saveEdit = (id) => {\n    const newNotes = [...notes].map((note) => {\n      if(note.id === id){\n         note.text = editingText;\n      };\n      return note;\n    });\n    setNotes(newNotes);\n    setNoteEditing(null);\n    setEditingText(\"\");\n  }\n\n\n  return (\n    <div className={darkMode && 'dark-mode'}>\n      <div className='container'>\n        <Header\n          darkMode={darkMode}\n          darkModeHandler={setDarkMode}/>\n        <Search setSearchText={setSearch} searchText={search}/>\n        <NotesList\n            notes={notes.filter((note) =>\n              note.text.toLowerCase().includes(search)) }\n            handleSubmitProp={addNote}\n            handleDelete={deleteNote}\n            handleEdit={editNote}\n            saveEdit={saveEdit}\n            noteEditing={noteEditing}\n            editingText={editingText}\n            editingTextHandler={editingTextHandler}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}